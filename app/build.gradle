apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId build_versions.applicationId
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.version_code
        versionName build_versions.version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            debuggable false
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            /*
            AS3.0 过时
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    def fileName = "playandroid-0.0.1.apk"
                    output.outputFile = new File(outputFile.parent, fileName)

                }
            }*/
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            /*applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    def fileName = "playandroid-0.0.1.apk"
                    output.outputFile = new File(outputFile.parent, fileName)

                }
            }*/
        }
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude "META-INF/MANIFEST.MF"
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/rxjava.properties'
    }

//    dexOptions {
//        javaMaxHeapSize "4g" //specify the heap size for the dex process
//        preDexLibraries = false //delete the already predexed libraries
//    }

//    lintOptions {
//        abortOnError false
//    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = rootProject.getName() + "-" + buildType.name + ".apk"
//                    + "-" + buildType.name
//                    + "-" + releaseTime()
//                    + "-v" + defaultConfig.versionName
//                    + "-" + defaultConfig.versionCode
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Espresso UI Testing
    androidTestImplementation deps.test.espresso_core
    androidTestImplementation deps.test.espresso_contrib
    androidTestImplementation deps.test.espresso_intents
    testImplementation deps.test.junit

    // MultiDex
    implementation deps.tool.multidex

    // Support
    implementation deps.support.app_compat
    implementation deps.support.design
    implementation deps.support.palette
    implementation deps.support.customtabs
    implementation deps.support.exifinterface
    implementation deps.support.recyclerview
    implementation deps.support.cardview
    implementation deps.support.mediarouter
    implementation deps.support.content

    //arch
    implementation deps.arch.lifecycle_extensions
    implementation deps.arch.room
    annotationProcessor deps.arch.room_compiler
    implementation deps.arch.paging

    //图片
    implementation deps.img.glide
    annotationProcessor deps.img.glide_compiler

    //网络
    implementation deps.net.retrofit
    implementation deps.net.retrofit_gson
    implementation deps.net.retrofit_adapter_rxjava2
    implementation deps.net.retrofit_logging

    // ui
    implementation deps.ui.constraint_layout

    //Rx
    implementation deps.rx.rxjava2
    implementation deps.rx.rxandroid
    implementation deps.rx.rxpermissions

    // tool
    implementation deps.tool.libphonenumber
    implementation deps.tool.geocoder
    implementation deps.tool.carrier

    implementation project(':base')
    implementation project(':number')
}
