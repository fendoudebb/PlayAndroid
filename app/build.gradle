apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.fendoudebb.playandroid"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude "META-INF/MANIFEST.MF"
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/rxjava.properties'
    }

//    dexOptions {
//        javaMaxHeapSize "4g" //specify the heap size for the dex process
//        preDexLibraries = false //delete the already predexed libraries
//    }

//    lintOptions {
//        abortOnError false
//    }


}

ext {
    supportLibVersion = "25.3.1"
    leakCanaryVersion = "1.5.1"
    blockCanaryVersion = "1.5.0"
    stethoVersion = "1.5.0"
    glideVersion = "4.0.0"
    retrofitVersion = "2.3.0"
    rxjavaVersion = "2.1.3"
    rxandroidVersion = "2.0.1"
    sqlbriteVersion = "2.0.0"
    guavaVersion = "23.0-android"
    rxpermissionsVersion = "0.9.4@aar"
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    // MultiDex
    compile "com.android.support:multidex:1.0.1"
    // support lib
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    // Material Design
    compile "com.android.support:design:${supportLibVersion}"
    // RecyclerView
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    // CardView
    compile "com.android.support:cardview-v7:${supportLibVersion}"
    // LeakCanary
//    debugCompile "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}"
//    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}"
    //BlockCanary
    compile "com.github.markzhai:blockcanary-android:${blockCanaryVersion}"
    // stetho
    compile "com.facebook.stetho:stetho-okhttp3:${stethoVersion}"
    // Glide
    compile "com.github.bumptech.glide:glide:${glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glideVersion}"
    // retrofit
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
//    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    // rxjava
    compile "io.reactivex.rxjava2:rxjava:${rxjavaVersion}"
    compile "io.reactivex.rxjava2:rxandroid:${rxandroidVersion}"
    //sqlbrite
    compile "com.squareup.sqlbrite2:sqlbrite:${sqlbriteVersion}"
    //guava
    compile "com.google.guava:guava:${guavaVersion}"
    //rxpermissions
    compile "com.tbruyelle.rxpermissions2:rxpermissions:${rxpermissionsVersion}"

    compile 'pub.devrel:easypermissions:1.0.0'

}
