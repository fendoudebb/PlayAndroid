apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 27
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.fendoudebb.playandroid"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            debuggable false
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            /*applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    def fileName = "playandroid-0.0.1.apk"
                    output.outputFile = new File(outputFile.parent, fileName)

                }
            }*/
            buildConfigField 'com.fendoudebb.playandroid.debug.stetho.StethoHelper', 'STETHO', 'new com.fendoudebb.playandroid.release.stetho.ReleaseStethoHelper()'
            buildConfigField 'com.fendoudebb.playandroid.debug.blockcanary.BlockCanaryHelper', 'BLOCKCANARY', 'new com.fendoudebb.playandroid.release.blockcanary.ReleaseBlockCanaryHelper()'
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            /*applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    def fileName = "playandroid-0.0.1.apk"
                    output.outputFile = new File(outputFile.parent, fileName)

                }
            }*/
            buildConfigField 'com.fendoudebb.playandroid.debug.stetho.StethoHelper', 'STETHO', 'new com.fendoudebb.playandroid.debug.stetho.DebugStethoHelper()'
            buildConfigField 'com.fendoudebb.playandroid.debug.blockcanary.BlockCanaryHelper', 'BLOCKCANARY', 'new com.fendoudebb.playandroid.debug.blockcanary.DebugBlockCanaryHelper()'
        }
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude "META-INF/MANIFEST.MF"
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/rxjava.properties'
    }

//    dexOptions {
//        javaMaxHeapSize "4g" //specify the heap size for the dex process
//        preDexLibraries = false //delete the already predexed libraries
//    }

//    lintOptions {
//        abortOnError false
//    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

ext {
    lifecycleVersion = "1.0.0"
    pagingVersion = "1.0.0-alpha3"
    constraintLayoutVersion = "1.0.2"
    supportLibVersion = "27.0.0"
    leakCanaryVersion = "1.5.1"
    blockCanaryVersion = "1.5.0"
    stethoVersion = "1.5.0"
    glideVersion = "3.7.0"
    retrofitVersion = "2.3.0"
    loggingInterceptorVersion = "3.9.0"
    rxjavaVersion = "2.1.3"
    rxandroidVersion = "2.0.1"
    sqlbriteVersion = "2.0.0"
    guavaVersion = "23.0-android"
    rxpermissionsVersion = "0.9.4@aar"
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    // MultiDex
    compile 'com.android.support:multidex:1.0.1'

    //Lifecycle
    compile "android.arch.lifecycle:extensions:${lifecycleVersion}"
    compile "android.arch.lifecycle:reactivestreams:${lifecycleVersion}"

    //Paged
    compile "android.arch.paging:runtime:${pagingVersion}"

    // ConstraintLayout
    compile "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}"

    // ContentPager
    compile "com.android.support:support-content:${supportLibVersion}"

    // v4
    compile "com.android.support:support-compat:${supportLibVersion}"

    // ViewDragHelper/ViewPager/NestedScrollView/SwipeRefreshLayout/DrawerLayout
    compile "com.android.support:support-core-ui:${supportLibVersion}"

    // support-core-ui
    compile "com.android.support:support-core-utils:${supportLibVersion}"

    // android.support.v4.app.Fragment/android.support.v4.app.DialogFragment/android.support.v4.app.ListFragment
    compile("com.android.support:support-fragment:${supportLibVersion}") {
        exclude module: 'support-core-utils'
        exclude module: 'support-media-compat'
    }

    // Vector Drawable Library
    compile "com.android.support:support-vector-drawable:${supportLibVersion}"

    // Animated Vector Drawable Library
    compile("com.android.support:animated-vector-drawable:${supportLibVersion}") {
        exclude module: 'support-core-ui'
    }

    // MediaSessionCompat
    compile "com.android.support:support-media-compat:${supportLibVersion}"

    // support lib
    compile("com.android.support:appcompat-v7:${supportLibVersion}") {
        exclude module: 'support-v4'
        exclude module: 'support-annotations'
        exclude module: 'support-compat'
        exclude module: 'support-core-ui'
        exclude module: 'support-core-utils'
        exclude module: 'support-vector-drawable'
        exclude module: 'animated-vector-drawable'
    }

    // Material Design
    compile("com.android.support:design:${supportLibVersion}") {
        exclude module: 'support-v4'
        exclude module: 'support-annotations'
        exclude module: 'support-compat'
        exclude module: 'support-core-ui'
        exclude module: 'support-core-utils'
        exclude module: 'support-vector-drawable'
        exclude module: 'animated-vector-drawable'
    }

    // palette
    compile "com.android.support:palette-v7:${supportLibVersion}"

    // Custom Tabs
    compile "com.android.support:customtabs:${supportLibVersion}"

    // ExifInterface
    compile "com.android.support:exifinterface:${supportLibVersion}"

    // RecyclerView
    compile("com.android.support:recyclerview-v7:${supportLibVersion}") {
        exclude module: 'support-compat'
        exclude module: 'support-core-ui'
    }

    // CardView
    compile "com.android.support:cardview-v7:${supportLibVersion}"

    // MediaRouter
    compile("com.android.support:mediarouter-v7:${supportLibVersion}") {
        exclude module: 'support-v4'
        exclude module: 'support-annotations'
        exclude module: 'support-compat'
        exclude module: 'support-core-ui'
        exclude module: 'support-core-utils'
        exclude module: 'support-vector-drawable'
        exclude module: 'animated-vector-drawable'
    }

    // LeakCanary
    debugCompile "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}"

    //    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}"

    //BlockCanary
    debugCompile "com.github.markzhai:blockcanary-android:${blockCanaryVersion}"

    // stetho
    debugCompile "com.facebook.stetho:stetho-okhttp3:${stethoVersion}"

    // Glide
    compile "com.github.bumptech.glide:glide:${glideVersion}"

    //    annotationProcessor "com.github.bumptech.glide:compiler:${glideVersion}"

    // retrofit
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${loggingInterceptorVersion}"

    //    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    // rxjava
    compile "io.reactivex.rxjava2:rxjava:${rxjavaVersion}"
    compile "io.reactivex.rxjava2:rxandroid:${rxandroidVersion}"

    //sqlbrite
    compile "com.squareup.sqlbrite2:sqlbrite:${sqlbriteVersion}"

    //guava

    //    compile "com.google.guava:guava:${guavaVersion}"

    //rxpermissions
    compile "com.tbruyelle.rxpermissions2:rxpermissions:${rxpermissionsVersion}"
}
